class Solution {
    int[] parent;
    public int[] findRedundantConnection(int[][] edges) {
        
        parent = new int[edges.length + 1];
        for(int i = 1; i<parent.length ; i++)  parent[i] = i;

        for(int[] edge : edges)
        {
            if(find(edge[0]) == find(edge[1]))return edge;
            union(edge[0], edge[1]);
        }
        return new int[]{-1,-1};
    }

    int find(int node)
    {
        while(parent[node] != node)     node = parent[node];
        return node;
    }

    void union(int node1, int node2)
    {
        int n = find(node1);
        int m = find(node2);
        
        if(n != m)    parent[m] = n;
    }
}
